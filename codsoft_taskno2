# Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
df = pd.read_csv('/mnt/data/IMDb Movies India.csv')

# Display first few rows to check structure
print(df.head())

# Check columns available
print(df.columns)

# Encode categorical features (Genre, Director, Actor)
label_encoders = {}
categorical_cols = ['Genre', 'Director', 'Actor']  # change according to your actual column names

for col in categorical_cols:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col].astype(str))
    label_encoders[col] = le

# Define features (X) and target (y)
X = df[categorical_cols]  # selecting only genre, director, actor for prediction
y = df['Rating']  # target column name should match your dataset

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R2 Score: {r2}")

# Example prediction
sample = pd.DataFrame({
    'Genre': [label_encoders['Genre'].transform(['Action'])[0]],
    'Director': [label_encoders['Director'].transform(['Rajkumar Hirani'])[0]],
    'Actor': [label_encoders['Actor'].transform(['Aamir Khan'])[0]]
})
predicted_rating = model.predict(sample)
print(f"Predicted rating for sample input: {predicted_rating[0]}")
