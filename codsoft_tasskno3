# Iris Flower Classification

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load the dataset
iris = pd.read_csv('/mnt/data/IRIS.csv')

# Explore the data
print("First 5 rows of the dataset:")
print(iris.head())
print("\nDataset Info:")
print(iris.info())
print("\nClass Distribution:")
print(iris['species'].value_counts())

# Prepare data
X = iris.drop('species', axis=1)  # Features
y = iris['species']               # Target

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Logistic Regression model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Evaluate the model
print("\nAccuracy Score:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))

# Example prediction
sample = [[5.1, 3.5, 1.4, 0.2]]  # Replace with any sample input
predicted_class = model.predict(sample)
print("\nPredicted class for sample", sample, "is:", predicted_class[0])
